help("sample")
mat4 <- matrix(data=sample(1:129,9), ncol=3)
mat4
mat4[2,2] #
mat4[,3]
mat4[3,]
mat4[2,2] <- pi
mat4
-1:1/0 #NaN es no a number
x <- NA
x
rm(list=ls())
x <- runif(1, 0, 10)
x
help("runif")
r <- runif(10,0,10)
r
x <- runif(1, 0, 10)
if(x>5){
y <- TRUE
}else{
y <- FALSE
}
x
x <- runif(1, 0, 10)
if(x<5){
y <- TRUE
}else{
y <- FALSE
}
x
help("print")
for(i in 1:5){
print(i)
}
i
i
sessionInfo()
m1 <- matrix(1:12, ncol=3, byrow=T, dimnames=list(c("r1","r2","r3","r4"), c("c1","c2","c3")))
m1
m1 <- matrix(1:12, ncol=3, byrow=T, dimnames=list(c("r1","r2","r3","r4"),
c("c1","c2","c3")))
m1[1,1]
m1[,c(2,3)]
m1[,c(2,3)] #Selecionar las columnas 2 y 3
class(m1[,c(2,3)])
class(m1)
m1[,c(-1,-3),drop=F]
m1[,c(-1,-3)]
m1[,c(-1,-3),drop=F]
sel <- matrix(rep(x(T,F),6),4,3)
sel <- matrix(rep(c(T,F),6),4,3)
sel
r <- c(1:7)
r
rep(r, 4) #
rep(1:7, 4)
rep(c("Hola", "a", "todos"), times=5) #
rep(c("Hola", "a", "todos"), each=3)
rep(c("Hola", "a", "todos"), times=c(3,2,5))
sel
sel <- matrix(rep(c(T,F),3),4,3)
sel
sel <- matrix(rep(c(T,F),2),4,3)
sel
sel <- matrix(rep(c(T,F),6),4,2)
sel
sel <- matrix(rep(c(T,F),6),4,4)
sel
sel <- matrix(rep(c(T,F),2),4,4)
sel
sel <- matrix(rep(c(T,F),3),4,3)
sel
m1[sel]
View(m1)
sel <- matrix(rep(c(F,T),3),4,3)
m1[sel]
sel <- matrix(rep(c(T,F),3),4,3)
m1[sel]
sel
ncol(m1)
nrow(m1)
t(m1)
m1
diag(m1)
help(col())
help("col")
col(m1)
m1
col(sel)
m1[,2]
m1[,2, drop=F]
cbind(1,m1)
cbind(1:2,m1)
cbind(rep(1:3),m1)
cbind(rep(1:2,2),m1)
cbind(1:3,1:6)
cbind(1:3,1:6,1:12)
apply(m1,1,sum)
m1
apply(m1,2,sum)
apply(m1,2,sum, drop=F)
apply(m1,1,sum, drop=F)
m1
apply(m1,1,sum,)
m1
apply(m1,1,sum)
apply(m2,2,sum)
apply(m1,2,sum)
apply(m1,2,mean) #
x <- runif(1,0,10) if (x>5) {
y <- T
}
x <- runif(1,0,10) if (x>5) {
y <- T}
x <- runif(1,0,10) if (x>5) {
y <- T
}
x <- runif(1,0,10) if (x>5) {
y <- T
} else {
y <- F
}
x <- runif(1,0,10)
if (x>5) {
y <- TRUE
}else{
y <- FALSE
}
x <- runif(1,0,10) if (x>5) {
y <- TRUE
} else {
y <- FALSE
}
x <- runif(1,0,10)
if (x>5) {
y <- TRUE
} else {
y <- FALSE
}
x
y
y
x <- runif(1,0,10)
if (x>5) {
y <- TRUE
} else {
y <- FALSE
}
x
y
q = runif(10,0,20)
q
help(runif)
q <- runif(10,0,20) #10 es el
q
VectorBoolaono <- (q>=14)
VectorBoolaono
class(VectorBoolaono)
q <- runif(10,0,20) #
VectorBoolaono <- (q>=14) #
VectorBoolaono
NumAprobados1 <- sum(VectorBoolaono)
NumAprobados1
NumAprobados2 <- length(VectorBoolaono[VectorBoolaono==T])
NumAprobados2
NumAprobados2 <- length(VectorBoolaono[VectorBoolaono=T])
NumAprobados2
NumAprobados2 <- length(VectorBoolaono[VectorBoolaono==T])
NumAprobados2
which(VectorBoolaono)
if (NumAprobados1>0){
q[which(VectorBoolaono)]
}
VectorBoolaono
NumAprobados1
q
help("which")
help("system.time")
system.time(sum(VectorBoolaono))
VectorBoolaono
system.time(length(VectorBoolaono[VectorBoolaono==T]))
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("Verdad" %in% x){
print("Verdad se encontró en IF")
} else if("VERDAD" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
x <- c("¿Qué","es","VERDAD?")
if("VERDAD?" %in% x){
print("verdad se encontró en IF")
} else if("VERDAD?" %in% x){
print("VERDAD se encontró en IF_ELSE")
} else{
print("No se econtró la VERDAD")
}
library()
install.packages("gclus")
library(gclus)
help(package = gclucs)
help(package = "gclucs")
help(package = "gclucs")
library(gclus) #Esto es para empezar a utilizarlo
help(package = "gclucs")
help(package = "gclus")
es.par <- function(numero){
residuo <- numero %% 2
if (residuo==0)
return(TRUE)
return(FALSE)
}
es.par(25)
es.par(12482)
es.impar <- function(número){
residuo <- número %% 2
if (residuo!=0)
return(TRUE)
return(FALSE)
}
es.impar(15)
es.impar(20)
es.divisible.por <- function(entero.grande,entero.pequeño){
if(entero.grande %% entero.pequeño !=0)
return(FALSE)
return(TRUE)
}
es.divisible.por(40,10)
es.divisible.por(53,25)
es.par <- function(num){
es.divisible.por(num,2)
}
es.par(47)
rm(list=ls())
setwd("C:/Users/Usuario/Desktop/Clases_de_R/Prácticas/Trabajo_02_ACF_PACF/")
set.seed(3.1416)
MA2_1 <- arima.sim(model=list(order=c(0,0,2), ma=c(0.2, 0.3)), sd=0.157, n=211)
plot.ts(MA2_1, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=0.2 y theta[2]=0.3)")
acf(MA2_1, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.2 y theta[2]=0.3))")
pacf(MA2_1, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=0.2 y theta[2]=0.3)")
set.seed(3.1416)
MA2_2 <- arima.sim(model=list(order=c(0,0,2), ma=c(0.5, 0.7)), sd=0.157, n=211)
plot.ts(MA2_2, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=0.5 y theta[2]=0.7)")
acf(MA2_2, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.5 y theta[2]=0.7))")
pacf(MA2_2, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=0.5 y theta[2]=0.7)")
acf(MA2_2, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.5 y theta[2]=0.7))")
pacf(MA2_2, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=0.5 y theta[2]=0.7)")
set.seed(3.1416)
MA2_3 <- arima.sim(model=list(order=c(0,0,2), ma=c(0.11, 0.13)), sd=0.157, n=211)
plot.ts(MA2_3, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=0.11 y theta[2]=0.13)")
acf(MA2_3, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.11 y theta[2]=0.13))")
pacf(MA2_3, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=0.11 y theta[2]=0.13)")
set.seed(2.7183)
MA2_4 <- arima.sim(model=list(order=c(0,0,2), ma=c(0.17, -0.19)), sd=0.163, n=223)
plot.ts(MA2_4, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=0.17 y theta[2]=-0.19)")
acf(MA2_4, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.17 y theta[2]=-0.19))")
pacf(MA2_4, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=0.17 y theta[2]=-0.19)")
set.seed(2.7183)
MA2_5 <- arima.sim(model=list(order=c(0,0,2), ma=c(0.23, -0.29)), sd=0.163, n=223)
plot.ts(MA2_5, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=0.23 y theta[2]=-0.29)")
acf(MA2_5, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.23 y theta[2]=-0.29))")
pacf(MA2_5, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=0.23 y theta[2]=-0.29)")
set.seed(2.7183)
MA2_6 <- arima.sim(model=list(order=c(0,0,2), ma=c(0.31, -0.37)), sd=0.163, n=223)
plot.ts(MA2_6, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=0.31 y theta[2]=-0.37)")
acf(MA2_6, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.31 y theta[2]=-0.37))")
pacf(MA2_6, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=0.31 y theta[2]=-0.37)")
set.seed(2.7183)
MA2_7 <- arima.sim(model=list(order=c(0,0,2), ma=c(0.41, -0.43)), sd=0.163, n=223)
plot.ts(MA2_7, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=0.41 y theta[2]=-0.43)")
acf(MA2_7, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.41 y theta[2]=-0.43))")
pacf(MA2_7, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=0.41 y theta[2]=-0.43)")
acf(MA2_7, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=0.41 y theta[2]=-0.43))")
set.seed(1.61803)
MA2_8 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.47, -0.53)), sd=0.167, n=227)
plot.ts(MA2_8, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.47 y theta[2]=-0.53)")
acf(MA2_8, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.47 y theta[2]=-0.53))")
pacf(MA2_8, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.47 y theta[2]=-0.53)")
acf(MA2_8, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.47 y theta[2]=-0.53))")
set.seed(1.61803)
MA2_9 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.59, -0.61)), sd=0.167, n=227)
plot.ts(MA2_9, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.59 y theta[2]=-0.61)")
acf(MA2_9, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.59 y theta[2]=-0.61))")
pacf(MA2_9, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.59 y theta[2]=-0.61)")
pacf(MA2_8, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.47 y theta[2]=-0.53)")
pacf(MA2_9, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.59 y theta[2]=-0.61)")
pacf(MA2_9, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.59 y theta[2]=-0.61)")
pacf(MA2_8, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.47 y theta[2]=-0.53)")
pacf(MA2_9, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.59 y theta[2]=-0.61)")
set.seed(1.61803)
MA2_10 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.67, -0.71)), sd=0.167, n=227)
plot.ts(MA2_10, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.67 y theta[2]=-0.71)")
acf(MA2_10, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.67 y theta[2]=-0.71))")
pacf(MA2_10, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.67 y theta[2]=-0.71)")
set.seed(1.61803)
MA2_11 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.73, -0.79)), sd=0.167, n=227)
plot.ts(MA2_11, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.73 y theta[2]=-0.79)")
acf(MA2_11, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.73 y theta[2]=-0.79))")
pacf(MA2_11, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.73 y theta[2]=-0.79)")
set.seed(1.61803)
MA2_12 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.83, -0.89)), sd=0.167, n=227)
plot.ts(MA2_12, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.83 y theta[2]=-0.89)")
acf(MA2_12, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.83 y theta[2]=-0.89))")
pacf(MA2_12, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.83 y theta[2]=-0.89)")
set.seed(0.1010010)
MA2_13 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.97, 0.101)), sd=0.173, n=229)
plot.ts(MA2_13, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.97 y theta[2]=0.101)")
plot.ts(MA2_13, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.97 y theta[2]=0.101)")
acf(MA2_13, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.97 y theta[2]=0.101))")
pacf(MA2_13, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.97 y theta[2]=0.101)")
set.seed(0.1010010)
MA2_14 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.103, 0.107)), sd=0.173, n=229)
plot.ts(MA2_14, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.103 y theta[2]=0.107)")
acf(MA2_14, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.103 y theta[2]=0.107))")
pacf(MA2_14, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.103 y theta[2]=0.107)")
set.seed(0.1010010)
MA2_15 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.109, 0.113)), sd=0.173, n=229)
plot.ts(MA2_15, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.109 y theta[2]=0.113)")
acf(MA2_15, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.109 y theta[2]=0.113))")
pacf(MA2_15, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.109 y theta[2]=0.113)")
set.seed(0.1010010)
MA2_16 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.127, 0.131)), sd=0.173, n=229)
plot.ts(MA2_16, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.127 y theta[2]=0.131)")
acf(MA2_16, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.127 y theta[2]=0.131))")
pacf(MA2_16, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.127 y theta[2]=0.131)")
set.seed(0.1010010)
MA2_17 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.137, 0.139)), sd=0.173, n=229)
plot.ts(MA2_17, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.137 y theta[2]=0.139)")
acf(MA2_17, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.137 y theta[2]=0.139))")
pacf(MA2_17, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.137 y theta[2]=0.139)")
set.seed(0.1010010)
MA2_18 <- arima.sim(model=list(order=c(0,0,2), ma=c(-0.149, 0.151)), sd=0.173, n=229)
plot.ts(MA2_18, main="Serie de Tiempo Simulada",
sub="Proceso de Medias Móviles (theta[1]=-0.149 y theta[2]=0.151)")
acf(MA2_18, main="Función de Autocorrelación Simple",
sub="Proceso de Medias Móviles (theta[1]=-0.149 y theta[2]=0.151))")
pacf(MA2_18, main = "Función de Autocorrelación Parcial",
sub="Proceso de Medias Móviles (theta[1]=-0.149 y theta[2]=0.151)")
